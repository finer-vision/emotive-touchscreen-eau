{"version":3,"file":"700.008fa3ea.chunk.js","mappings":"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","sources":["webpack:///./node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","webpack:///./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack:///./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack:///./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/use-force-update.mjs","webpack:///./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack:///./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack:///./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack:///./node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","webpack:///./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack:///./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack:///./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","webpack:///./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/index.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack:///./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/types.mjs","webpack:///./node_modules/framer-motion/dist/es/events/use-dom-event.mjs","webpack:///./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack:///./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack:///./node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","webpack:///./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/array.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack:///./node_modules/framer-motion/dist/es/value/index.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack:///./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack:///./node_modules/hey-listen/dist/hey-listen.es.js","webpack:///./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/back.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/index.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/waapi/index.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/PanSession.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    // Support deprecated exitBeforeEnter prop\n    if (exitBeforeEnter) {\n        mode = \"wait\";\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"Replace exitBeforeEnter with mode='wait'\");\n        }\n    }\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, useContext(LazyContext).strict, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { addDomEvent, useDomEvent } from '../events/use-dom-event.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    function onPointerStart(event, info) {\n        var _a;\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }\n    const callbackDependencies = [\n        Boolean(onTapStart),\n        Boolean(onTap),\n        Boolean(whileTap),\n        visualElement,\n    ];\n    const startPress = useCallback((event, info) => {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        onPointerStart(event, info);\n    }, callbackDependencies);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    const startAccessiblePress = useCallback(() => {\n        const stopKeydownListener = addDomEvent(visualElement.current, \"keydown\", (event) => {\n            if (event.key !== \"Enter\" || isPressing.current)\n                return;\n            isPressing.current = true;\n            cancelPointerEndListeners.current = addDomEvent(visualElement.current, \"keyup\", () => {\n                if (event.key !== \"Enter\" || !checkPointerEnd())\n                    return;\n                fireSyntheticPointerEvent(\"up\", visualElement.getProps().onTap);\n            }, eventOptions);\n            fireSyntheticPointerEvent(\"down\", onPointerStart);\n        });\n        const stopBlurListener = addDomEvent(visualElement.current, \"blur\", () => {\n            stopKeydownListener();\n            stopBlurListener();\n            if (isPressing.current) {\n                fireSyntheticPointerEvent(\"cancel\", onPointerCancel);\n            }\n        });\n    }, callbackDependencies);\n    useDomEvent(visualElement, \"focus\", hasPressListeners ? startAccessiblePress : undefined);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useRef, useCallback } from 'react';\n\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const isFocusActive = useRef(false);\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = visualElement.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, true);\n        isFocusActive.current = true;\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        if (!isFocusActive.current || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, false);\n        isFocusActive.current = false;\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.0.2\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.2\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n"],"names":["useIsMounted","isMounted","useRef","current","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","forceRender","forcedRenderCount","setForcedRenderCount","useState","useCallback","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","map","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createContext","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","cancel","index","process","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","VisualElementHandler","visualElement","setProps","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","projectionNodeConstructor","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","inherit","getCurrentTreeVariants","useCreateMotionContext","projectionId","visualState","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","presenceId","blockInitialAnimation","HandoffAppearAnimations","useEffect","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useHTMLProps","htmlProps","assign","useInitialMotionValues","transformValues","useStyle","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","AnimationType","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","info","setActive","Hover","isNodeOrChild","parentElement","combineFunctions","pipe","transformers","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","thresholdNames","all","useIntersectionObserver","shouldObserve","root","rootMargin","amount","once","threshold","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","observeIntersection","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTapCancel","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_b","_c","_d","onPointerCancel","onPointerStart","latestProps","callbackDependencies","startPress","startAccessiblePress","stopKeydownListener","stopBlurListener","whileFocus","isFocusActive","onFocus","isFocusVisible","matches","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","shallowCompare","next","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","constructor","subscriptions","notify","c","numSubscriptions","getSize","velocityPerSecond","velocity","frameDuration","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","onChange","subscription","on","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","getPrevious","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","interpolate","input","isClamp","ease","mixer","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","noop","any","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","keyframes","keyframeValues","times","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","rootIterations","calcAngularFreq","undampedFreq","dampingRatio","durationKeys","physicsKeys","isSpringType","velocitySampleDuration","spring","restDelta","restSpeed","stiffness","damping","mass","isResolvedFromDuration","springOptions","derived","bounce","envelope","derivative","exponentialDecay","exp","d","f","initialGuess","result","approximateRoot","findSpring","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","driverControls","interpolateFromNumber","repeatCount","computedDuration","isForwardPlayback","animator","hasRepeatDelayElapsed","reverseElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","sampleDelta","timeout","checkElapsed","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueName","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","createAcceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","makeTargetAnimatable","willChange","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","setTarget","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","createAnimationState","resolvedDefinition","animateVisualElement","animateList","createTypeState","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","dragControls","groupDragControls","cssVariableRegex","maxDepth","getVariableValue","depth","token","exec","parseCSSVariable","getComputedStyle","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","parseDomVariant","resolveCSSVariables","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","convertChangedValueTypes","scrollTo","checkAndConvertChangedValueTypes","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","super","arguments","getAttribute","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","documentNode","position","featureBundle","motion","isBrowser","useConstant","useIsomorphicLayoutEffect","useLayoutEffect","useUnmountEffect"],"sourceRoot":""}